version: '3.7'

services:
  website:
    build: .
    image: website
    container_name: website
    env_file:
      - ./env_files/.env
    volumes:
      - .:/opt/services/website/src
      - static_volume:/opt/services/website/static
      - media_volume:/opt/services/website/media
    networks:
      - nginx_network
      - website_db_network
      - collector_network
      - rabbitmq_network
    depends_on:
      - website_db
      - rabbitmq
    command: ["gunicorn", "--bind", ":8000", "website.wsgi:application"]

  celery_beat:
    image: website
    container_name: celery_beat
    env_file:
      - ./env_files/.env
    volumes:
      - .:/opt/services/website/src
    networks: 
      - website_db_network
      - rabbitmq_network 
    depends_on:
      - website_db
      - rabbitmq
      - celery_worker
    command: ["celery", "-A", "website", "beat"]

  celery_worker:
    image: website
    container_name: celery_worker
    env_file:
      - ./env_files/.env
    volumes:
      - .:/opt/services/website/src
    networks: 
      - website_db_network
      - rabbitmq_network 
    depends_on:
      - website_db
      - rabbitmq
    command: ["celery", "-A", "website", "worker"]

  nginx:
    image: nginx:1.15
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/opt/services/website/static
      - media_volume:/opt/services/website/media
      - certs:/etc/letsencrypt
      - certs_data:/var/www/certbot
    depends_on:
      - website
    networks:
      - nginx_network

  website_db:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
    image: website_db
    container_name: website_db
    env_file:
      - ./env_files/.env
    networks:
      - website_db_network
    volumes:
      - website_db_volume:/var/lib/postgresql/data

  collector:
    build:
      context: ../collector
      dockerfile: Dockerfile
    image: collector
    container_name: collector
    env_file:
      - ./env_files/.env
    networks:
      - website_db_network
      - collector_network
    depends_on:
      - website_db

  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq
    env_file:
      - ./env_files/.env
    hostname: "rabbitmq"
    image: rabbitmq
    networks: 
      - rabbitmq_network
    volumes:
      - rabbitmq_volume:/var/lib/rabbitmq

networks:
  nginx_network:
    driver: bridge
  website_db_network:
    driver: bridge
  collector_network:
    driver: bridge
  rabbitmq_network:
    driver: bridge

volumes:
  website_db_volume:
  static_volume:
  media_volume:
  rabbitmq_volume:
  certs:
  certs_data: